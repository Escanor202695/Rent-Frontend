import { GridEvents } from "@egjs/grid";
import { REACT_GRID_EVENT_MAP } from "./consts";
export declare type Entries<Obj extends {
    [key: string]: any;
}, Key = keyof Obj> = Key extends string ? [Key, Obj[Key]] : never;
export declare type EventEntries = Entries<typeof REACT_GRID_EVENT_MAP>;
export declare type ReactEvents = EventEntries[1];
export declare type FindEventName<Value extends string, E = EventEntries> = E extends [infer Name, Value] ? Name : never;
export declare type ReactGridEvents = {
    [ReactEventName in ReactEvents]?: (e: GridEvents[FindEventName<ReactEventName>]) => any;
};
export interface ReactGridProps extends ReactGridEvents {
    tag?: string;
}
