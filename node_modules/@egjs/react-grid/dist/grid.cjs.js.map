{"version":3,"file":"grid.cjs.js","sources":["../src/consts.ts","../src/Grid.tsx","../src/grids/MasonryGrid.tsx","../src/grids/JustifiedGrid.tsx","../src/grids/FrameGrid.tsx","../src/grids/PackingGrid.tsx"],"sourcesContent":["\nexport const REACT_GRID_EVENT_MAP = {\n  \"contentError\": \"onContentError\",\n  \"renderComplete\": \"onRenderComplete\",\n} as const;\n\nexport const REACT_GRID_EVENTS = [\n  \"onContentError\",\n  \"onRenderComplete\",\n] as const;\nexport const REACT_GRID_PROPS = [\n  \"tag\",\n  ...REACT_GRID_EVENTS,\n] as const;\n","/**\n * egjs-grid\n * Copyright (c) 2021-present NAVER Corp.\n * MIT license\n */\nimport * as React from \"react\";\nimport VanillaGrid, { withGridMethods, GridOptions, GridMethods, GridFunction } from \"@egjs/grid\";\nimport { ReactGridProps } from \"./types\";\nimport { REACT_GRID_PROPS, REACT_GRID_EVENT_MAP } from \"./consts\";\n\nexport abstract class Grid<T extends GridOptions>\n  extends React.PureComponent<T & ReactGridProps & { [key: string]: any }> {\n  public static GridClass: GridFunction;\n  @withGridMethods\n  private _grid!: VanillaGrid;\n  private _containerRef = React.createRef<HTMLDivElement>();\n  public render() {\n    const attributes: { [key: string]: any } = {};\n    const props = this.props;\n    const GridClass = (this.constructor as typeof Grid).GridClass;\n    const defaultOptions = GridClass.defaultOptions;\n    const Tag = props.tag as any || \"div\";\n\n    for (const name in props) {\n      if (name in defaultOptions || REACT_GRID_PROPS.indexOf(name as any) > -1) {\n        continue;\n      }\n      attributes[name] = props[name];\n    }\n    return <Tag ref={this._containerRef} {...attributes}>\n      {this.props.children}\n    </Tag>;\n  }\n  public componentDidMount() {\n    const GridClass = (this.constructor as typeof Grid).GridClass;\n    const defaultOptions = GridClass.defaultOptions;\n    const options: Partial<GridOptions> = {};\n    const props = this.props;\n\n    for (const name in defaultOptions) {\n      if (name in props) {\n        (options as any)[name] = (props as any)[name];\n      }\n    }\n\n    const grid = new GridClass(this._containerRef.current!, options);\n\n    for (const eventName in REACT_GRID_EVENT_MAP) {\n      const reactEventName = (REACT_GRID_EVENT_MAP as any)[eventName];\n\n      grid.on(eventName as any, (e: any) => {\n        const callback = props[reactEventName];\n\n        callback && callback({...e});\n      });\n    }\n    grid.syncElements();\n\n    this._grid = grid;\n  }\n  public componentDidUpdate() {\n    const GridClass = (this.constructor as typeof Grid).GridClass;\n    const propertyTypes = GridClass.propertyTypes;\n    const props = this.props;\n    const grid = this._grid;\n\n    for (const name in propertyTypes) {\n      if (name in props) {\n        (grid as any)[name] = (props as any)[name];\n      }\n    }\n    this._grid.syncElements();\n  }\n  public componentWillUnmount() {\n    this._grid.destroy();\n  }\n}\nexport interface Grid<T extends GridOptions> extends GridMethods<Grid<T>> { }\n","import {\n  MasonryGrid as VanillaMasonryGrid,\n  MasonryGridOptions,\n} from \"@egjs/grid\";\nimport { Grid } from \"../Grid\";\n\nexport class MasonryGrid extends Grid<MasonryGridOptions> {\n  public static GridClass = VanillaMasonryGrid;\n}\n","import {\n  JustifiedGrid as VanillaJustifiedGrid,\n  JustifiedGridOptions,\n} from \"@egjs/grid\";\nimport { Grid } from \"../Grid\";\n\nexport class JustifiedGrid extends Grid<JustifiedGridOptions> {\n  public static GridClass = VanillaJustifiedGrid;\n}\n","import {\n  FrameGrid as VanillaFrameGrid,\n  FrameGridOptions,\n} from \"@egjs/grid\";\nimport { Grid } from \"../Grid\";\n\nexport class FrameGrid extends Grid<FrameGridOptions> {\n  public static GridClass = VanillaFrameGrid;\n}\n","import {\n  PackingGrid as VanillaPackingGrid,\n  PackingGridOptions,\n} from \"@egjs/grid\";\nimport { Grid } from \"../Grid\";\n\nexport class PackingGrid extends Grid<PackingGridOptions> {\n  public static GridClass = VanillaPackingGrid;\n}\n"],"names":["REACT_GRID_EVENT_MAP","REACT_GRID_EVENTS","REACT_GRID_PROPS","__spreadArray","__extends","_this","React","attributes","props","GridClass","constructor","defaultOptions","Tag","tag","name","indexOf","ref","_containerRef","children","options","grid","current","eventName","reactEventName","on","e","callback","syncElements","_grid","propertyTypes","destroy","__decorate","withGridMethods","MasonryGrid","VanillaMasonryGrid","Grid","JustifiedGrid","VanillaJustifiedGrid","FrameGrid","VanillaFrameGrid","PackingGrid","VanillaPackingGrid"],"mappings":"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"}